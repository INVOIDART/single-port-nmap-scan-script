#!/bin/bash

# Script to select Nmap options and scan all ports of a single IP by INVOID

# Function to display options and get user input
select_options() {
  echo "Select Nmap scan options:"
  echo "1. Basic scan (all ports, default scripts)"
  echo "2. Aggressive scan (all ports, service version detection, scripts)"
  echo "3. Stealth scan (SYN scan, all ports)"
  echo "4. Custom scan (specify options)"
  echo "5. Exit"

  read -p "Enter your choice (1-5): " choice

  case "$choice" in
    1)
      OPTIONS="-p- -sV -sC" # All ports, service version detection, default scripts
      ;;
    2)
      OPTIONS="-p- -sV -sC -A" # All ports, service version detection, scripts, aggressive
      ;;
    3)
      OPTIONS="-p- -sS" # All ports, SYN scan (stealth)
      ;;
    4)
      read -p "Enter custom Nmap options (e.g., -p 1-1000 -sT): " CUSTOM_OPTIONS
      OPTIONS="$CUSTOM_OPTIONS"
      ;;
    5)
      exit 0
      ;;
    *)
      echo "Invalid choice. Please try again."
      select_options # Recursively call the function
      ;;
  esac

  echo "Selected options: $OPTIONS"
  return 0
}


# Get the target IP
read -p "Enter the target IP address: " TARGET_IP

# Validate IP address (basic check)
if [[ ! "$TARGET_IP" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
  echo "Invalid IP address format."
  exit 1
fi

# Select scan options
select_options

# Construct the Nmap command
NMAP_COMMAND="nmap $OPTIONS $TARGET_IP"

# Confirm and run the scan
read -p "Ready to run the following command? (y/n): $NMAP_COMMAND " confirm

if [[ "$confirm" == "y" ]]; then
  echo "Running Nmap scan..."
  eval "$NMAP_COMMAND" # Execute the command
  echo "Nmap scan finished."
else
  echo "Scan cancelled."
fi

exit 0#!/bin/bash

# Script to select Nmap options and scan all ports of a single IP

# Function to display options and get user input
select_options() {
  echo "Select Nmap scan options:"
  echo "1. Basic scan (all ports, default scripts)"
  echo "2. Aggressive scan (all ports, service version detection, scripts)"
  echo "3. Stealth scan (SYN scan, all ports)"
  echo "4. Custom scan (specify options)"
  echo "5. Exit"

  read -p "Enter your choice (1-5): " choice

  case "$choice" in
    1)
      OPTIONS="-p- -sV -sC" # All ports, service version detection, default scripts
      ;;
    2)
      OPTIONS="-p- -sV -sC -A" # All ports, service version detection, scripts, aggressive
      ;;
    3)
      OPTIONS="-p- -sS" # All ports, SYN scan (stealth)
      ;;
    4)
      read -p "Enter custom Nmap options (e.g., -p 1-1000 -sT): " CUSTOM_OPTIONS
      OPTIONS="$CUSTOM_OPTIONS"
      ;;
    5)
      exit 0
      ;;
    *)
      echo "Invalid choice. Please try again."
      select_options # Recursively call the function
      ;;
  esac

  echo "Selected options: $OPTIONS"
  return 0
}


# Get the target IP
read -p "Enter the target IP address: " TARGET_IP

# Validate IP address (basic check)
if [[ ! "$TARGET_IP" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
  echo "Invalid IP address format."
  exit 1
fi

# Select scan options
select_options

# Construct the Nmap command
NMAP_COMMAND="nmap $OPTIONS $TARGET_IP"

# Confirm and run the scan
read -p "Ready to run the following command? (y/n): $NMAP_COMMAND " confirm

if [[ "$confirm" == "y" ]]; then
  echo "Running Nmap scan..."
  eval "$NMAP_COMMAND" # Execute the command
  echo "Nmap scan finished."
else
  echo "Scan cancelled."
fi

exit 0
